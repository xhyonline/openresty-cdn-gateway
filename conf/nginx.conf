
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    error_log /ngx_err.log info;
    lua_shared_dict cache 10m;
    resolver 114.114.114.114;
    lua_code_cache   on;
    lua_package_path "/usr/local/openresty/nginx/lua_modules/?.lua;?.lua;/usr/local/openresty/lualib/?.lua;";
    init_worker_by_lua_file "lua_modules/process_module/lua_module_master_init_worker_process.lua";
    server {
        listen 0.0.0.0:80 sndbuf=128k;
        listen 0.0.0.0:443 ssl sndbuf=128k;
        server_name  *.*;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
	    ssl_certificate      /fake.pem;
        ssl_certificate_key  /fake.key;

        include "/usr/local/openresty/nginx/lua_modules/lua_include_conf/include_server.conf"; # 用于 SSL 握手
        location / {
             slice   1m;
             proxy_set_header Range $slice_range;
             set $hash_key   $uri;
             set $version    "";
             proxy_set_header X-CDN-TimeStamp $version;
             proxy_set_header hash-key $hash_key/$slice_range;
             set $module_conf "/usr/local/openresty/nginx/lua_modules/lua_modules_conf/module_conf";
             include "/usr/local/openresty/nginx/lua_modules/lua_include_conf/include_location.conf";
             proxy_pass http://127.0.0.1:8787;
        }


        location /unload {
              content_by_lua_block {
                    ngx.log(ngx.INFO,"许弘毅调试,卸载模块:",ngx.var.arg_m)
                    package.loaded[ngx.var.arg_m] = nil
                }
        }


        location /unloadstring {
            content_by_lua_block {
                local mod_key = "loading_status"
                local cache = ngx.shared.cache
                cache:set(mod_key,"false")
                ngx.log(ngx.INFO,"许弘毅调试卸载了模块")
            }
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
