
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

# redis 相关环境变量
env REDIS_HOST; # redis host
env REDIS_PORT; # 端口
env REDIS_DB_INDEX; # db index
env REDIS_PASSWORD; # 密码
env REDIS_KEEPALIVE; # 每个连接空闲时刻存活时长,单位 ms
env REDIS_POOL_SIZE; # nginx 每个 worker 中 redis 连接池的个数,请注意是每个 worker 都会单独拥有这么多连接个数
env REDIS_TIMEOUT; # 执行命令的超时时间 单位 ms


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    error_log /ngx_err.log info;
    lua_shared_dict cache 10m;
    resolver 114.114.114.114;
    lua_code_cache   on;
    lua_package_path "/usr/local/openresty/nginx/lua_modules/?.lua;?.lua;/usr/local/openresty/lualib/?.lua;";
    lua_package_cpath "/usr/local/openresty/lualib/resty/?.so;;";
    init_worker_by_lua_file "lua_modules/process_module/lua_module_master_init_worker_process.lua";
    server {
        listen 0.0.0.0:80 sndbuf=128k;
        listen 0.0.0.0:443 ssl sndbuf=128k;
        server_name  *.*;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
	    ssl_certificate      /fake.pem;
        ssl_certificate_key  /fake.key;
        include "/usr/local/openresty/nginx/lua_modules/lua_include_conf/include_server.conf"; # 用于 SSL 握手
        location / {
             slice   1m;
             proxy_set_header Range $slice_range;
             set $hash_key   $uri;
             set $version    "";
             proxy_set_header X-CDN-TimeStamp $version;
             proxy_set_header hash-key $hash_key/$slice_range;
             set $module_conf "/usr/local/openresty/nginx/lua_modules/lua_modules_conf/module_conf";
             include "/usr/local/openresty/nginx/lua_modules/lua_include_conf/include_location.conf";
             proxy_pass http://chash;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
       # 一致性 hash
    upstream chash {
        server 0.0.0.1;
        balancer_by_lua_file "lua_modules/process_module/lua_module_master_balancer_process.lua";
    }
}
